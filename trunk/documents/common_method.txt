public IEnumerable<Invoice> GetAll()
        {
            return Context.Invoices;
        }

        public void Add(Invoice entity)
        {
            ContextAdd(entity);
        }

        public void Update(Invoice entity)
        {
            ContextUpdate(entity);
        }

        public void Delete(int id)
        {
            ContextDelete(id);
        }

        public Invoice Get(int id)
        {
            return ContextGet(id);
        }
		
		ITaRepositoryBase<DeliveryPerson>
		
		public TaAccountRepository(TaDalContext Context) {
            this.Context = Context;
        }
		
		[Key, ForeignKey("Account"), Column(Order = 1)]
        public int Account_Id { get; set; }
        [Key, ForeignKey("AccountClause"), Column(Order = 2)]
        public int AccountClause_Id { get; set; }
		
		alter table Account add unique(Code)
		alter table AccountType add unique(Code)
		
		alter table DeliveryPerson add unique(IC)
		
		entityModelType.Name